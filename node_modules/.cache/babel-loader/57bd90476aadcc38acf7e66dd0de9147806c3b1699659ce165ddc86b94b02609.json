{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const DarkModeContext=/*#__PURE__*/createContext();export const DarkModeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(false);useEffect(()=>{const savedMode=localStorage.getItem('darkMode');if(savedMode!==null){setIsDarkMode(JSON.parse(savedMode));}},[]);useEffect(()=>{if(isDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[isDarkMode]);const toggleDarkMode=()=>{setIsDarkMode(!isDarkMode);localStorage.setItem('darkMode',JSON.stringify(!isDarkMode));};return/*#__PURE__*/_jsx(DarkModeContext.Provider,{value:{isDarkMode,toggleDarkMode},children:children});};export default DarkModeContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","DarkModeContext","DarkModeProvider","_ref","children","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","document","body","classList","add","remove","toggleDarkMode","setItem","stringify","Provider","value"],"sources":["C:/wamp64/www/sangamesh-myageri.github.io/src/context/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst DarkModeContext = createContext();\r\n\r\nexport const DarkModeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    if (savedMode !== null) {\r\n      setIsDarkMode(JSON.parse(savedMode));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('darkMode', JSON.stringify(!isDarkMode));\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DarkModeContext;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAM,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAClD,GAAIF,SAAS,GAAK,IAAI,CAAE,CACtBD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAENT,SAAS,CAAC,IAAM,CACd,GAAIO,UAAU,CAAE,CACdO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAAE,CAACX,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAY,cAAc,CAAGA,CAAA,GAAM,CAC3BX,aAAa,CAAC,CAACD,UAAU,CAAC,CAC1BG,YAAY,CAACU,OAAO,CAAC,UAAU,CAAER,IAAI,CAACS,SAAS,CAAC,CAACd,UAAU,CAAC,CAAC,CAC/D,CAAC,CAED,mBACEL,IAAA,CAACC,eAAe,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,UAAU,CAAEY,cAAe,CAAE,CAAAb,QAAA,CAC7DA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}