{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\react-portfolio\\\\src\\\\context\\\\DarkModeContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext();\nexport const DarkModeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode !== null) {\n      setIsDarkMode(JSON.parse(savedMode));\n    }\n  }, []);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(!isDarkMode));\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = DarkModeProvider;\nexport default DarkModeContext;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","children","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","toggleDarkMode","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/react-portfolio/src/context/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst DarkModeContext = createContext();\r\n\r\nexport const DarkModeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    if (savedMode !== null) {\r\n      setIsDarkMode(JSON.parse(savedMode));\r\n    }\r\n  }, []);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('darkMode', JSON.stringify(!isDarkMode));\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DarkModeContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,IAAIF,SAAS,KAAK,IAAI,EAAE;MACtBD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3BN,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BG,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACI,SAAS,CAAC,CAACT,UAAU,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEL,OAAA,CAACC,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,UAAU;MAAEO;IAAe,CAAE;IAAAT,QAAA,EAC7DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAChB,EAAA,CApBWF,gBAAgB;AAAAmB,EAAA,GAAhBnB,gBAAgB;AAsB7B,eAAeD,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}