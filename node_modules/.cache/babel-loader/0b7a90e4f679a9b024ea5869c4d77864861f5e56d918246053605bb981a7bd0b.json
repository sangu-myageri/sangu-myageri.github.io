{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\react-portfolio\\\\src\\\\context\\\\DarkModeContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeContext = /*#__PURE__*/createContext();\nexport const DarkModeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    if (savedMode !== null) {\n      setIsDarkMode(JSON.parse(savedMode));\n    }\n  }, []);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('darkMode', JSON.stringify(!isDarkMode));\n  };\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeProvider, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = DarkModeProvider;\nexport default DarkModeContext;\nvar _c;\n$RefreshReg$(_c, \"DarkModeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","DarkModeContext","DarkModeProvider","children","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","JSON","parse","document","body","classList","add","remove","toggleDarkMode","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/react-portfolio/src/context/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst DarkModeContext = createContext();\r\n\r\nexport const DarkModeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const savedMode = localStorage.getItem('darkMode');\r\n    if (savedMode !== null) {\r\n      setIsDarkMode(JSON.parse(savedMode));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    localStorage.setItem('darkMode', JSON.stringify(!isDarkMode));\r\n  };\r\n\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n      {children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DarkModeContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,IAAIF,SAAS,KAAK,IAAI,EAAE;MACtBD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACdO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BX,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BG,YAAY,CAACU,OAAO,CAAC,UAAU,EAAER,IAAI,CAACS,SAAS,CAAC,CAACd,UAAU,CAAC,CAAC;EAC/D,CAAC;EAED,oBACEL,OAAA,CAACC,eAAe,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,UAAU;MAAEY;IAAe,CAAE;IAAAd,QAAA,EAC7DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACrB,EAAA,CA5BWF,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AA8B7B,eAAeD,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}